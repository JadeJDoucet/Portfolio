{"version":3,"sources":["project-data/headshots/headshot-close.jpg","components/PersonalProfile.js","components/Projects.js","components/NavBar.js","components/About.js","components/Tools.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PersonalProfile","mobile","image","display","marginLeft","marginRight","marginTop","width","borderRadius","introWrapper","backgroundColor","textAlign","paddingTop","paddingBottom","id","style","src","require","alt","Typography","variant","color","Projects","container","padding","text","NavBar","bar","paddingLeft","alignText","Breadcrumbs","aria-label","Link","href","About","boxShadow","paddingRight","Tools","toolWrapper","Grid","spacing","item","xs","textDecoration","List","ListItem","ListItemText","App","appWrapper","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5e83ece.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot-close.1dda9e3d.jpg\";","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function PersonalProfile({ mobile }) {\n  const styles = {\n    introWrapper: {\n      backgroundColor: 'rgb(51, 51, 51)',\n      textAlign: 'center',\n      paddingTop: '3%',\n      paddingBottom: '3%',\n    },\n    image: {\n      display: 'block',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 3,\n      width: '23%',\n      borderRadius: '50%',\n    }\n  }\nconst { image, introWrapper } = styles;\n  return (\n    <section id=\"intro\" style={introWrapper}>\n      <img\n      src={require(\"../project-data/headshots/headshot-close.jpg\")}\n      alt=\"profile\"\n      style={image}\n      />\n      <Typography variant=\"h2\" style={{ color: 'lightgrey' }}>Jade Doucet</Typography>\n      <Typography variant=\"subtitle1\" style={{ color: 'lightgrey' }}>Software Engineer</Typography>\n    </section>\n  )\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function Projects() {\n  const styles = {\n    container: {\n      textAlign: 'center',\n      backgroundColor:'rgb(51, 51, 51)',\n      padding: '3%'\n    },\n    text: {\n      color: 'lightgrey'\n    }\n  };\n\n  const { container, text } = styles;\n\n  return (\n    <div id=\"projects\" style={container}>\n      <Typography variant=\"h4\" style={text}>Recent Projects</Typography>\n    </div>\n  );\n};\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nexport default function NavBar() {\n  const styles = {\n    bar: {\n      padding: '0.5%',\n      paddingLeft: '1%',\n      alignText: 'right',\n    },\n  };\n\n  const { bar } = styles;\n\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\" style={bar}>\n      <Link color=\"textPrimary\" href=\"#about\">\n        About\n      </Link>\n      <Link color=\"inherit\" href=\"#projects\">\n        Projects\n      </Link>\n      <Link color=\"inherit\" href=\"#tools\">\n        Skills\n      </Link>\n      <Link color=\"inherit\" href=\"#contact\">\n        Contact\n      </Link>\n    </Breadcrumbs>\n  )\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function About({ mobile }) {\n  const styles = {\n    introWrapper: {\n      textAlign: 'center',\n      display: 'inline-block',\n      boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n      padding: '5%',\n      paddingRight: '10%',\n      paddingLeft: '10%',\n    },\n  }\n  const { introWrapper } = styles;\n  return (\n    <section id=\"about\" style={introWrapper}>\n      <Typography variant=\"h4\" style={{ marginTop: '-3%', paddingBottom: '3%' }}>About Me</Typography>\n      <Typography variant=\"body1\">I am a full-stack software engineer from New Orleans with a passion for technology.\n        I've built web and mobile apps with JavaScript and Node, as well as video games within Unity.\n        I'm proficient in full stack development, whether it's designing a front-end or back-end, dealing with APIs, deploying, or constructing databases with SQL or NoSQL.\n        For any questions, feel free to contact me via <a href=\"mailto:jadejdoucet@gmail.com\">email</a>.\n      </Typography>\n    </section>\n  )\n}","import React from 'react';\nimport { Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core';\n\nexport default function Tools() {\n  const styles = {\n    toolWrapper: {\n      // marginLeft: window.innerWidth > 1000 ? '40%' : '15%',\n      marginLeft: '15%',\n    },\n  };\n\n  const { toolWrapper } = styles;\n\n  return (\n    <section id=\"tools\" style={{ textAlign: 'center' }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} style={{ paddingTop: '3%' }}>\n          <Typography variant=\"h4\">My Tools </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"h6\" style={{ textDecoration: 'underline' }}>Front-End</Typography>\n          <List style={toolWrapper}>\n            <ListItem>\n              <ListItemText variant=\"body1\">- HTML / CSS</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText variant=\"body1\">- JavaScript</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText variant=\"body1\">- React</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText variant=\"body1\">- React Native</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText variant=\"body1\">- AngularJS</ListItemText>\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"h6\" style={{ textDecoration: 'underline' }}>Back-End</Typography>\n          <List style={toolWrapper}>\n            <ListItem>\n              <ListItemText variant=\"body1\">- Node.js</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText variant=\"body1\">- Express</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText variant=\"body1\">- SQL / NoSQL</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText variant=\"body1\">- MySQL / PostgreSQL</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText variant=\"body1\">- MongoDB / Mongoose</ListItemText>\n            </ListItem>\n          </List>\n        </Grid>\n      </Grid>\n    </section>\n  )\n}","import React from 'react';\nimport './App.css';\n\n// import components\nimport PersonalProfile from './components/PersonalProfile';\nimport Projects from './components/Projects.js';\nimport NavBar from './components/NavBar.js';\nimport About from './components/About.js';\nimport Tools from './components/Tools.js';\n\nfunction App() {\n  // To do: add clickable links to sections of page\n  const styles = {\n    appWrapper: {\n      display: 'inline',\n    },\n  };\n\n  const { appWrapper } = styles;\n\n  return (\n    <div style={appWrapper}>\n      <NavBar />\n      <PersonalProfile />\n      <About />\n      <Projects />\n      <Tools />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}