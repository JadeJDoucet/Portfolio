{"version":3,"sources":["project-data/headshots/headshot-close.jpg","project-data/project-photos/scannar-proto-image.png","project-data/project-photos/scannar-products.png","project-data/project-photos/scannar-ar.png","project-data/project-photos/scannar-product.png","project-data/project-photos/scannar-ss/scannar-business-login.png","project-data/project-photos/scannar-ss/scannar-business-no-products.png","project-data/project-photos/scannar-ss/scannar-business-create.png","project-data/project-photos/scannar-ss/scannar-business-products.png","project-data/project-photos/readr-ss/readr-login.png","project-data/project-photos/readr-ss/readr-suggestion.png","project-data/project-photos/readr-ss/readr-saved.png","project-data/project-photos/readr-ss/readr-reader.png","project-data/project-photos/adopt-a-pothole-ss/adopt-home.jpg","project-data/project-photos/adopt-a-pothole-ss/adopt-report.jpg","project-data/project-photos/adopt-a-pothole-ss/adopt-map.jpg","project-data/wallpapers/green-textured.jpg","components/PersonalProfile.js","components/ProjectListItem.js","project-data/projects.js","components/ProjectList.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PersonalProfile","mobile","fixedProfileStyle","position","margin","backgroundColor","border","boxShadow","Card","style","Image","src","require","wrapped","ui","Content","Header","href","marginLeft","color","fontSize","className","Meta","Description","ProjectListItem","project","name","description","coverImage","images","url","useState","currImage","setCurrImage","hzItem","float","borderRadius","handleReadr","image","Grid","Row","marginBottom","Column","width","target","rel","rounded","size","length","listStyleType","padding","overflow","map","img","i","key","bordered","onClick","handleImageClick","projects","ProjectList","NavBar","setContact","activeItem","setActiveItem","fixedMenuStyle","Menu","borderless","stackable","Dropdown","item","icon","Item","active","window","location","App","contact","webStyle","marginTop","mobileStyle","listCol","profileCol","innerWidth","columns","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6ea031d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot-close.1dda9e3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scannar-proto-image.6e594c31.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-products.64dead0f.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-ar.5f3f9d7b.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-product.4af3135f.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-business-login.6b3954dc.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-business-no-products.c8eea8e1.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-business-create.b14a9f7c.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-business-products.7f44d451.png\";","module.exports = __webpack_public_path__ + \"static/media/readr-login.24ec0411.png\";","module.exports = __webpack_public_path__ + \"static/media/readr-suggestion.2eabf88d.png\";","module.exports = __webpack_public_path__ + \"static/media/readr-saved.64af019e.png\";","module.exports = __webpack_public_path__ + \"static/media/readr-reader.822f4a51.png\";","module.exports = __webpack_public_path__ + \"static/media/adopt-home.e8cdf96e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/adopt-report.8d3c1907.jpg\";","module.exports = __webpack_public_path__ + \"static/media/adopt-map.f71d196b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green-textured.33d16cac.jpg\";","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\n\nexport default function PersonalProfile({ mobile }) {\n  const fixedProfileStyle = {\n    position: mobile ? null : 'fixed',\n    margin: mobile? 'auto' : null,\n    backgroundColor: '#fff',\n    border: '1px solid #ddd',\n    boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)',\n  }\n\n  return (\n    <Card\n      style={fixedProfileStyle}\n    >\n      <Image\n      src={require(\"../project-data/headshots/headshot-close.jpg\")}\n      wrapped\n      ui={false}\n      />\n      <Card.Content>\n      <Card.Header>Jade Doucet\n        <a href=\"https://github.com/JadeJDoucet\" style={{ marginLeft: '25%', color: 'black', fontSize: 25 }}>\n          <i className=\"github icon\"></i>\n        </a>\n          <a href=\"https://linkedin.com/in/jadejdoucet\" style={{ color: '#0077B5', fontSize: 25 }}>\n          <i className=\"linkedin icon\"></i>\n        </a>\n      </Card.Header>\n      <Card.Meta>\n          <span className='date'>Software Engineer</span>\n      </Card.Meta>\n        <Card.Description>I am a full-stack software engineer from New Orleans with a passion for technology.\n          I've built web and mobile apps with JavaScript and Node, as well as video games within Unity. \n          I'm proficient in full stack development, whether it's designing a front-end or back-end, dealing with APIs, deploying, or constructing databases with SQL or NoSQL.\n          For any questions, feel free to contact me via <a href=\"mailto:jadejdoucet@gmail.com\">email</a>.\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  )\n}","import React, { useState } from 'react';\nimport { Grid, Image } from 'semantic-ui-react';\n\nexport default function ProjectListItem({ project, mobile }) {\n  const { name, description, coverImage, images, url } = project;\n  const [currImage, setCurrImage] = useState(null);\n\n // styles\n  const hzList = {\n    listStyleType: 'none',\n    margin: 0,\n    padding: 0,\n    overflow: 'hidden',\n  }\n\n  const hzItem = { \n    float: 'left',\n    margin: 5,\n    borderRadius: 5,\n  }\n\n  // dynamic sizing for mobile\n  const imgSize = (image) => {\n    if (name === 'Readr') {\n      return handleReadr(image);\n    }\n    if (currImage === image) {\n      if (mobile) {\n        return 'small';\n      } else {\n        return 'medium';\n      }\n    }\n  return mobile ? 'tiny' : 'small';\n  };\n\n  // handle clicking to zoom\n  const handleImageClick = (img) => {\n    if (img === currImage) {\n      setCurrImage(null);\n    } else {\n      setCurrImage(img);\n    }\n  };\n\n  // handles sizing for Readr images - These are smaller\n  const handleReadr = (image) => {\n    if (currImage === image) {\n      if (mobile) {\n        return 'medium';\n      } else {\n        return 'large';\n      }\n    }\n    return mobile ? 'small' : 'medium';\n  };\n\n  return (\n    <Grid.Row style={{ boxShadow: '0px 1px 5px grey', borderRadius: 5, marginBottom: 5, backgroundColor: 'rgba(255, 255, 255, 0.87)'}}>\n      <Grid.Column width={3}>\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Image src={coverImage} rounded size={'large'}/>\n        </a>\n      </Grid.Column>\n      <Grid.Column width={13}>\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <h1 style={{ color: '#058E3F' }}>{name}</h1>\n        </a>\n        <p>{description}</p>\n          {images.length ? \n              <ul style={hzList}>\n            {images.map((img, i) => {\n              return (\n                <li key={i}>\n                  <Image src={img} size={imgSize(img)} bordered style={hzItem} onClick={() => handleImageClick(img)}/>\n                </li>\n              )\n            })\n            }\n              </ul>\n            : null\n          }\n      </Grid.Column>\n    </Grid.Row>\n  );\n}","const projects = [\n  {\n    name: 'Scannar (Customer)',\n    description: 'Augmented reality pricing solution',\n    url: 'https://github.com/Assert-Reconceptualization/ScannAr',\n    coverImage: require('./project-photos/scannar-proto-image.png'),\n    images: [\n      require('./project-photos/scannar-products.png'), \n      require('./project-photos/scannar-ar.png'),\n      require('./project-photos/scannar-product.png'),\n    ],\n  },\n  {\n    name: 'Scannar (Business)',\n    description: 'Augmented reality pricing solution',\n    url: 'https://github.com/Assert-Reconceptualization/ScannAr',\n    coverImage: require('./project-photos/scannar-ss/scannar-business-login.png'),\n    images: [\n      require('./project-photos/scannar-ss/scannar-business-no-products.png'),\n      require('./project-photos/scannar-ss/scannar-business-create.png'),\n      require('./project-photos/scannar-ss/scannar-business-products.png'),\n    ],\n  },\n  {\n    name: 'Readr',\n    description: 'Reading suggestion / open source reading application',\n    url: 'https://github.com/Adopt-A-Pothole/Readr',\n    coverImage: require('./project-photos/readr-ss/readr-login.png'),\n    images: [\n      require('./project-photos/readr-ss/readr-suggestion.png'),\n      require('./project-photos/readr-ss/readr-saved.png'),\n      require('./project-photos/readr-ss/readr-reader.png'),\n    ],\n  },\n  {\n    name: 'Adopt-A-Pothole',\n    description: 'Crowdfunding app to restore New Orleans streets',\n    url: 'https://github.com/Adopt-A-Pothole/adopt-a-pothole',\n    coverImage: require('./project-photos/adopt-a-pothole-ss/adopt-home.jpg'),\n    images: [\n      require('./project-photos/adopt-a-pothole-ss/adopt-report.jpg'),\n      require('./project-photos/adopt-a-pothole-ss/adopt-map.jpg'),\n    ],\n  },\n];\n\nexport default projects;","import React from 'react';\nimport { Grid } from 'semantic-ui-react'\n\n// import components\nimport ProjectListItem from './ProjectListItem';\n\n// import projects\nimport projects from '../project-data/projects';\n\nexport default function ProjectList({ mobile }) {\n\n  return (\n    <Grid style={{ padding: 15 }}>\n      {projects.map((project, i) => (\n      <ProjectListItem key={i} project={project} mobile={mobile} />\n        )\n      )}\n    </Grid>\n  );\n};\n","import React, { useState } from 'react';\nimport { Menu, Dropdown } from 'semantic-ui-react';\n\nexport default function NavBar({ mobile, setContact }) {\n  const [activeItem, setActiveItem] = useState('');\n\n  const fixedMenuStyle = {\n    backgroundColor: '#058E3F',\n    border: '1px solid #ddd',\n    boxShadow: '0px 4px 5px rgba(0, 0, 0, 0.2)',\n    borderRadius: 5,\n  };\n  const toRender = () => {\n    if (mobile) {\n      return (\n        <Menu\n          borderless\n          className=\"ui top fixed menu header\"\n          stackable\n          style={fixedMenuStyle}\n        >\n          <Dropdown item icon='bars' /*removed 'simple' here*/>\n              <Dropdown.Menu>\n              <Dropdown.Item style={{ color: '#fff' }}>Email</Dropdown.Item>\n              </Dropdown.Menu>\n          </Dropdown>\n        </Menu>\n      )\n    } else {\n      return (\n        <Menu\n        borderless\n        className=\"ui top fixed menu header\"\n        stackable\n        style={fixedMenuStyle}\n        onClick={() => setActiveItem('')}\n        >\n          <Menu.Item\n            style={{ color: '#fff' }}\n            className=\"right item\"\n            active={activeItem === 'contact'}\n            onClick={() => {setActiveItem('contact'); window.location.href=\"mailto:'jadejdoucet@gmail.com';\"}}\n          >\n            Email\n          </Menu.Item>\n        </Menu>\n      )\n    }\n  }\nreturn toRender();\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { Grid } from 'semantic-ui-react';\n\n// import components\nimport PersonalProfile from './components/PersonalProfile';\nimport ProjectList from './components/ProjectList';\nimport NavBar from './components/NavBar';\nimport background from './project-data/wallpapers/green-textured.jpg';\n\nfunction App() {\n  const [contact, setContact] = useState(false);\n\n  const styles = {\n    webStyle: {\n      marginTop: '3.8%', // place items under nav bar\n    },\n    mobileStyle: {\n      marginTop: '14%', // place items under nav bar\n    },\n    listCol: {\n      marginLeft: '17.5%',\n      marginTop: '-1.6%'\n    },\n    profileCol: {\n      marginLeft: 5,\n    }\n  }\n  const { webStyle, mobileStyle, listCol, profileCol } = styles;\n\n  const mobileViewMain = () => (\n    <Grid>\n      <NavBar mobile setContact={setContact}/>\n      <Grid.Row width={5} style={mobileStyle}>\n        <PersonalProfile mobile/>\n      </Grid.Row>\n      <Grid.Row width={12}>\n        <ProjectList mobile/>\n      </Grid.Row>\n    </Grid>\n  )\n\n  const desktopViewMain = () => (\n    <div>\n      <NavBar setContact={setContact}/>\n      <div\n        style={webStyle}\n      >\n        <Grid columns={2}>\n          <Grid.Column width={4} style={profileCol}>\n            <PersonalProfile />\n          </Grid.Column>\n          <Grid.Column width={13} style={listCol}>\n            <ProjectList />\n          </Grid.Column>\n        </Grid>\n      </div>\n    </div>\n  )\n\nconst toRender = () => {\n  if (contact) {\n    // To do: Add dynamic contact page\n    return <div>contact page</div>\n  } else {\n    return window.innerWidth < 1000 ? mobileViewMain() : desktopViewMain();\n  }\n}\n\n  return (\n    <div>\n      {toRender()}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}