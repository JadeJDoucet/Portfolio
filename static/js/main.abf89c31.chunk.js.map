{"version":3,"sources":["project-data/headshots/headshot-close.jpg","project-data/project-photos/scannar-proto-image.png","project-data/project-photos/scannar-products.png","project-data/project-photos/scannar-ar.png","project-data/project-photos/scannar-product.png","project-data/project-photos/scannar-ss/scannar-business-login.png","project-data/project-photos/scannar-ss/scannar-business-no-products.png","project-data/project-photos/scannar-ss/scannar-business-create.png","project-data/project-photos/scannar-ss/scannar-business-products.png","project-data/project-photos/readr-ss/readr-login.png","project-data/project-photos/readr-ss/readr-suggestion.png","project-data/project-photos/readr-ss/readr-saved.png","project-data/project-photos/readr-ss/readr-reader.png","project-data/project-photos/adopt-a-pothole-ss/adopt-home.jpg","project-data/project-photos/adopt-a-pothole-ss/adopt-report.jpg","project-data/project-photos/adopt-a-pothole-ss/adopt-map.jpg","components/PersonalProfile.js","components/ProjectListItem.js","project-data/projects.js","components/ProjectList.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PersonalProfile","mobile","fixedProfileStyle","position","margin","backgroundColor","border","boxShadow","Card","style","Image","src","require","wrapped","ui","Content","Header","href","marginLeft","color","fontSize","className","Meta","Description","ProjectListItem","project","name","description","coverImage","images","hzItem","float","padding","borderRadius","Grid","Row","marginBottom","Column","width","rounded","maxHeight","length","listStyleType","overflow","map","img","i","key","size","bordered","projects","ProjectList","NavBar","useState","activeItem","setActiveItem","Menu","borderless","stackable","Item","active","onClick","App","webStyle","marginTop","mobileStyle","listCol","profileCol","window","innerWidth","columns","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abf89c31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot-close.1dda9e3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scannar-proto-image.6e594c31.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-products.64dead0f.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-ar.5f3f9d7b.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-product.4af3135f.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-business-login.6b3954dc.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-business-no-products.c8eea8e1.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-business-create.b14a9f7c.png\";","module.exports = __webpack_public_path__ + \"static/media/scannar-business-products.7f44d451.png\";","module.exports = __webpack_public_path__ + \"static/media/readr-login.24ec0411.png\";","module.exports = __webpack_public_path__ + \"static/media/readr-suggestion.2eabf88d.png\";","module.exports = __webpack_public_path__ + \"static/media/readr-saved.64af019e.png\";","module.exports = __webpack_public_path__ + \"static/media/readr-reader.822f4a51.png\";","module.exports = __webpack_public_path__ + \"static/media/adopt-home.e8cdf96e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/adopt-report.8d3c1907.jpg\";","module.exports = __webpack_public_path__ + \"static/media/adopt-map.f71d196b.jpg\";","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\n\nexport default function PersonalProfile({ mobile }) {\n  const fixedProfileStyle = {\n    position: mobile ? null : 'fixed',\n    margin: mobile? 'auto' : null,\n    backgroundColor: '#fff',\n    border: '1px solid #ddd',\n    boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)',\n  }\n\n  return (\n    <Card\n      style={fixedProfileStyle}\n    >\n      <Image\n      src={require(\"../project-data/headshots/headshot-close.jpg\")}\n      wrapped\n      ui={false}\n      />\n      <Card.Content>\n      <Card.Header>Jade Doucet\n        <a href=\"https://github.com/JadeJDoucet\" style={{ marginLeft: '25%', color: 'black', fontSize: 25 }}>\n          <i className=\"github icon\"></i>\n        </a>\n          <a href=\"https://linkedin.com/in/jadejdoucet\" style={{ color: '#0077B5', fontSize: 25 }}>\n          <i className=\"linkedin icon\"></i>\n        </a>\n      </Card.Header>\n      <Card.Meta>\n          <span className='date'>Software Engineer</span>\n      </Card.Meta>\n        <Card.Description>I am a full-stack software engineer from New Orleans with a passion for technology.\n          I'm experienced in web, mobile, and game development. \n          I've developed AR mobile apps, a variety of web apps, and video games.\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  )\n}","import React from 'react';\nimport { Grid, Image } from 'semantic-ui-react';\n\nexport default function ProjectListItem({ project, mobile }) {\n  const { name, description, coverImage, images } = project;\n\n  // to do: add onClick to images to blow them up\n\n  const imageStyle = {\n    maxHeight: '50em',\n  }\n  \n  const hzList = {\n    listStyleType: 'none',\n    margin: 0,\n    padding: 0,\n    overflow: 'hidden',\n  }\n\n  const hzItem = {\n    float: 'left',\n    padding: 10,\n    borderRadius: 5,\n  }\n\n  return (\n    <Grid.Row style={{ boxShadow: '0px 1px 5px grey', borderRadius: 5, marginBottom: 5 }}>\n      <Grid.Column width={3} >\n        <Image src={coverImage} rounded style={imageStyle} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <h1>{name}</h1>\n        <p>{description}</p>\n          {images.length ? \n              <ul style={hzList}>\n            {images.map((img, i) => {\n              return (\n                <li>\n                  <Image key={i} src={img} size={mobile ? 'tiny' : 'small'} bordered style={hzItem}/>\n                </li>\n              )\n            })\n            }\n              </ul>\n            : null\n          }\n      </Grid.Column>\n    </Grid.Row>\n  );\n}","const projects = [\n  {\n    name: 'Scannar (Customer)',\n    description: 'Augmented reality pricing solution',\n    coverImage: require('./project-photos/scannar-proto-image.png'),\n    images: [\n      require('./project-photos/scannar-products.png'), \n      require('./project-photos/scannar-ar.png'),\n      require('./project-photos/scannar-product.png'),\n    ],\n  },\n  {\n    name: 'Scannar (Business)',\n    description: 'Augmented reality pricing solution',\n    coverImage: require('./project-photos/scannar-ss/scannar-business-login.png'),\n    images: [\n      require('./project-photos/scannar-ss/scannar-business-no-products.png'),\n      require('./project-photos/scannar-ss/scannar-business-create.png'),\n      require('./project-photos/scannar-ss/scannar-business-products.png'),\n    ],\n  },\n  {\n    name: 'Readr',\n    description: 'Reading suggestion / open source reading application', \n    coverImage: require('./project-photos/readr-ss/readr-login.png'),\n    images: [\n      require('./project-photos/readr-ss/readr-suggestion.png'),\n      require('./project-photos/readr-ss/readr-saved.png'),\n      require('./project-photos/readr-ss/readr-reader.png'),\n    ],\n  },\n  {\n    name: 'Adopt-A-Pothole',\n    description: 'Crowdfunding app to restore New Orleans streets',\n    coverImage: require('./project-photos/adopt-a-pothole-ss/adopt-home.jpg'),\n    images: [\n      require('./project-photos/adopt-a-pothole-ss/adopt-report.jpg'),\n      require('./project-photos/adopt-a-pothole-ss/adopt-map.jpg'),\n    ],\n  },\n];\n\nexport default projects;","import React from 'react';\nimport { Grid } from 'semantic-ui-react'\n\n// import components\nimport ProjectListItem from './ProjectListItem';\n\n// import projects\nimport projects from '../project-data/projects';\n\nexport default function ProjectList({ mobile }) {\n\n  return (\n    <Grid style={{ padding: 15 }}>\n      {projects.map((project, i) => (\n      <ProjectListItem key={i} project={project} mobile={mobile}/>\n        )\n      )}\n    </Grid>\n  );\n};\n","import React, { useState } from 'react';\nimport { Menu } from 'semantic-ui-react';\n\nexport default function NavBar() {\n  const [activeItem, setActiveItem] = useState('');\n\n  const fixedMenuStyle = {\n    backgroundColor: '#fff',\n    border: '1px solid #ddd',\n    boxShadow: '0px 4px 5px rgba(0, 0, 0, 0.2)',\n    borderRadius: 5,\n  };\n\n  return (\n    <Menu\n    borderless\n    className=\"ui top fixed menu header\"\n    stackable\n    style={fixedMenuStyle}\n    >\n      <Menu.Item\n      className=\"right item\"\n        active={activeItem === 'about'}\n        onClick={() => setActiveItem('about')}\n      >\n        About Me\n      </Menu.Item>\n      <Menu.Item\n        active={activeItem === 'contact'}\n        onClick={() => setActiveItem('contact')}\n      >\n        Contact\n      </Menu.Item>\n    </Menu>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { Grid } from 'semantic-ui-react';\n\n// import components\nimport PersonalProfile from './components/PersonalProfile';\nimport ProjectList from './components/ProjectList';\nimport NavBar from './components/NavBar';\n\nfunction App() {\n  const styles = {\n    webStyle: {\n      marginTop: '3.8%', // place items under nav bar\n    },\n    mobileStyle: {\n      marginTop: '25%', // place items under nav bar\n    },\n    listCol: {\n      marginLeft: '17.5%',\n      marginTop: '-1.6%'\n    },\n    profileCol: {\n      marginLeft: 5,\n    }\n  }\n  const { webStyle, mobileStyle, listCol, profileCol } = styles;\n\n  const mobileView = () => (\n    <Grid>\n      <NavBar />\n      <Grid.Row width={5} style={mobileStyle}>\n        <PersonalProfile mobile/>\n      </Grid.Row>\n      <Grid.Row width={12}>\n        <ProjectList mobile/>\n      </Grid.Row>\n    </Grid>\n  )\n\n  return (\n    <div>\n      {window.innerWidth < 1000 ? mobileView() : \n        <div>\n        <NavBar />\n        <div\n        style={webStyle}\n        >\n          <Grid columns={2}>\n            <Grid.Column width={4} style={profileCol}>\n              <PersonalProfile />\n            </Grid.Column>\n            <Grid.Column width={14} style={listCol}>\n              <ProjectList />\n            </Grid.Column>\n          </Grid>\n        </div>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}